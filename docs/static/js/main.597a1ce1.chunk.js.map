{"version":3,"sources":["Details.tsx","VideoRecorder.tsx","App.tsx","index.tsx"],"names":["Details","index","title","description","open","className","randIndex","length","min","randNum","Uint32Array","x","window","crypto","getRandomValues","VideoRecorder","props","React","useState","isRecording","setRecording","videoLength","setVideoLength","passwordLength","setPasswordLength","videoRef","useRef","generatePassword","charsetPattern","Promise","resolve","reject","mediaData","navigator","mediaDevices","getUserMedia","audio","video","then","stream","recorder","MediaRecorder","addEventListener","event","push","data","buffer","Blob","videoSrc","URL","createObjectURL","current","src","start","setTimeout","stop","catch","recordVideo","Response","arrayBuffer","buff","password","array","Uint8Array","done","b","c","String","fromCharCode","test","name","type","max","onChange","n","parseInt","target","value","isNaN","id","disabled","onClick","onRecordingStart","onRecordingEnd","error","controls","ref","style","height","AppReducer","state","action","showPassword","Error","App","details","textDecoration","href","rel","useReducer","dispatch","defaultValue","fontSize","map","detail","i","ReactDOM","render","StrictMode","document","getElementById","alert"],"mappings":"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","file":"static/js/main.597a1ce1.chunk.js","sourcesContent":["import React, { ReactNode, FC } from 'react'\n\ninterface DetailsProps {\n  index: number\n  title: string\n  open: boolean\n  description: ReactNode\n}\n\nconst Details: FC<DetailsProps> = ({ index, title, description, open }) => {\n  return (\n    <details open={open} className={index > 0 ? 'mb-4' : ''}>\n      <summary>\n        <b>{title}</b>\n      </summary>\n      <p className=\"text-light\">{description}</p>\n    </details>\n  )\n}\n\nexport default Details\n","import React, { FC, ChangeEvent } from 'react'\n\ninterface VideoRecorderProps {\n  onRecordingStart: () => void\n  onRecordingEnd: (password: string) => void\n}\n\nconst VideoRecorder: FC<VideoRecorderProps> = (props) => {\n  let [isRecording, setRecording] = React.useState(false)\n  let [videoLength, setVideoLength] = React.useState(2)\n  let [passwordLength, setPasswordLength] = React.useState(32)\n  let videoRef = React.useRef<HTMLVideoElement>(null)\n\n  function recordVideo(videoLength: number): Promise<Blob[]> {\n    return new Promise((resolve, reject) => {\n      let mediaData: Blob[] = []\n      navigator.mediaDevices.getUserMedia({ audio: true, video: true })\n        .then(stream => {\n          let recorder = new MediaRecorder(stream)\n          recorder.addEventListener('dataavailable', (event) => {\n            mediaData.push(event.data)\n          })\n          recorder.addEventListener('stop', () => {\n            let buffer = new Blob(mediaData)\n            let videoSrc = window.URL.createObjectURL(buffer)\n            if (videoRef && videoRef.current) {\n              videoRef.current.src = videoSrc\n            }\n          })\n          recorder.start()\n          setTimeout(() => {\n            recorder.stop()\n            setTimeout(() => {\n              resolve(mediaData)\n            }, 100)\n          }, videoLength * 1000)\n        })\n        .catch(reject)\n    });\n  }\n\n  function generatePassword(videoLength: number, passwordLength: number): Promise<string> {\n    let charsetPattern: RegExp = /[a-zA-Z\\d#?!@$%^&*-]/\n\n    return new Promise((resolve, reject) => {\n      recordVideo(videoLength).then((mediaData: Blob[]) => {\n        new Response(mediaData[0]).arrayBuffer().then(buff => {\n          let password = ''\n          let array = new Uint8Array(buff)\n          let done = false\n          while (!done) {\n            let i = randIndex(array.length)\n            let b = array[i]\n            let c = String.fromCharCode(b)\n            if (charsetPattern.test(c)) {\n              password += c\n            }\n            done = password.length >= passwordLength\n          }\n          resolve(password)\n        }, reject)\n      }, reject)\n    })\n  }\n\n  function startRecording() {\n    setRecording(true)\n    props.onRecordingStart()\n    generatePassword(videoLength, passwordLength).then(\n      (password) => {\n        setRecording(false)\n        props.onRecordingEnd(password)\n      },\n      (error) => {\n        setRecording(false)\n      }\n    )\n  }\n\n  function handleVideoLengthChange(event: ChangeEvent<HTMLInputElement>){\n    let n = parseInt(event.target.value, 10)\n    if (!isNaN(n)) {\n      setVideoLength(n)\n    }\n  }\n\n  function handlePasswordLengthChange(event: ChangeEvent<HTMLInputElement>){\n    let n = parseInt(event.target.value, 10)\n    if (!isNaN(n)) {\n      setPasswordLength(n)\n    }\n  }\n\n  return (\n    <form>\n      <div className=\"form-group row mb-2\">\n        <label className=\"col-sm-9 col-form-label\">\n          Video Recording Length\n          <small className=\"text-muted\">(seconds)</small>\n        </label>\n        <div className=\"col-sm-3\">\n          <input className=\"form-control\"\n                 name=\"video-length\"\n                 type=\"number\"\n                 min=\"1\"\n                 max=\"30\"\n                 onChange={handleVideoLengthChange}\n                 value={videoLength} />\n        </div>\n      </div>\n      <div className=\"form-group row mb-4\">\n        <label className=\"col-sm-9 col-form-label\">Password Length</label>\n        <div className=\"col-sm-3\">\n          <input className=\"form-control\"\n                 name=\"password-length\"\n                 type=\"number\"\n                 min=\"1\"\n                 max=\"128\"\n                 onChange={handlePasswordLengthChange}\n                 value={passwordLength} />\n        </div>\n      </div>\n      <div className=\"d-flex justify-content-center mb-4\">\n        <button id=\"submit-button\"\n                type=\"button\"\n                className={`text-white w-50 btn ${isRecording ? 'btn-danger' : 'btn-success'}`}\n                disabled={isRecording}\n                onClick={startRecording}>\n          <b>{isRecording ? 'Recording...' : 'Start Recording'}</b>\n        </button>\n      </div>\n      <video controls\n             ref={videoRef}\n             id=\"video\"\n             className=\"rounded border bg-light w-100 d-block\"\n             style={{ height: '300px' }}></video>\n    </form>\n  );\n}\n\nfunction randIndex(length: number): number {\n  let min:number = (-length >>> 0) % length\n  let randNum = new Uint32Array(1)\n  let x: number = 0\n  do { x = window.crypto.getRandomValues(randNum)[0] } while (x < min)\n  return x % length\n}\n\nexport default VideoRecorder\n","import React from 'react';\nimport Details from './Details'\nimport VideoRecorder from './VideoRecorder'\n\nimport './App.css';\n\ninterface IAppState {\n  password: string\n  showPassword: boolean\n}\n\ninterface IAppAction {\n  type: string\n  value: string\n}\n\nfunction AppReducer(state: IAppState, action: IAppAction) {\n  switch (action.type) {\n    case 'recordingStart':\n      return { ...state, showPassword: false };\n    case 'recordingEnd':\n      return { password: action.value, showPassword: true };\n    default:\n      throw new Error();\n  }\n}\n\nfunction App() {\n  let details = [\n    {\n      title: 'What is this?',\n      description: <span>\n        This is an experimental password generator written in ReactJS that uses a video of you to\n        generate a random password. You can find more details on my <a className=\"text-white font-weight-bold\"\n                                                                       style={{textDecoration: 'underline'}}\n                                                                       href=\"https://hachibu.net/posts/2019/be-your-own-password-generator/\"\n                                                                       rel=\"noreferrer\"\n                                                                       target=\"_blank\">blog</a>.\n      </span>,\n      open: true\n    },\n    {\n      title: 'How does this work?',\n      description: <span>\n        It records a short video of you and then transforms that raw video\n        data into an array of 8-bit unsigned integers. Then it randomly\n        selects an integer from that array and transforms it into its\n        corresponding UTF-16 character. If that character is a lowercase\n        letter, uppercase letter, digit or special character it will be used\n        for your password. The process of selecting a random character\n        continues until the password is long enough.\n      </span>,\n      open: false\n    },\n    {\n      title: 'Is the video saved anywhere?',\n      description: <span>\n        The video is only stored temporarily in your browser for playback\n        purposes. The video will dissapear as soon as you close or refresh\n        this page.\n      </span>,\n      open: false\n    },\n    {\n      title: 'Is it safe to use these passwords?',\n      description: <span>\n        I would strongly suggest that you do not use these passwords.\n        I haven't run any proper entropy tests on the generated passwords.\n        So, I can't confirm or deny the actual strength of these passwords.\n        Please keep using your password manager to generate passwords.\n      </span>,\n      open: false\n    },\n  ];\n\n  let [state, dispatch] = React.useReducer(AppReducer, {\n    password: '',\n    showPassword: false\n  });\n\n  function handleRecordingStart() {\n    dispatch({ type: 'recordingStart', value: '' });\n  }\n\n  function handleRecordingEnd(password: string) {\n    dispatch({ type: 'recordingEnd', value: password });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mb-4 pl-3 pr-3\">\n        <input name=\"password\"\n               defaultValue={state.password}\n               className={`w-100 p-4 alert alert-success form-control ${state.showPassword ? 'd-block': 'd-none'}`}\n               type=\"text\"\n               style={{fontSize: '30px'}} />\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col mb-4\">\n          <div className=\"text-white mb-4 h-100\">\n            <h1 className=\"mb-5\">Be Your Own Password Generator</h1>\n            {details.map((detail, i) => (\n              <Details key={i}\n                       index={i}\n                       open={detail.open}\n                       title={detail.title}\n                       description={detail.description} />\n            ))}\n          </div>\n        </div>\n\n        <div className=\"col\">\n          <div className=\"bg-white rounded p-4 mb-4\">\n            <VideoRecorder onRecordingStart={handleRecordingStart}\n                           onRecordingEnd={handleRecordingEnd} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport 'bootstrap/dist/css/bootstrap.css'\n\nimport App from './App'\n\nif (!navigator?.mediaDevices?.getUserMedia) {\n  alert('This browser does not support the Media Devices API.')\n} else if (!crypto) {\n  alert('This browser does not support the Web Crypto API.')\n} else {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  )\n}\n"],"sourceRoot":""}